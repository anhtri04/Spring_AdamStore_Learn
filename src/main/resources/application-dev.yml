server:
  port: 8080

spring:
  config:
    activate:
      on-profile: dev

  # Database
  datasource:
    url: ${DATABASE_URL:jdbc:mysql://localhost:3306/adamstore}
    username: ${DATABASE_USERNAME:root}
    password: ${DATABASE_PASSWORD:123456}
    driver-class-name: com.mysql.cj.jdbc.Driver

  jpa:
    database-platform: org.hibernate.dialect.MySQL8Dialect
    hibernate:
      ddl-auto: update
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

  # Redis
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:123456}


  mail:
    host: ${MAIL_HOST:smtp.gmail.com}
    port: ${MAIL_PORT:587}
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: ${MAIL_SMTP_AUTH:true}
          starttls:
            enable: ${MAIL_SMTP_STARTTLS_ENABLE:true}


springdoc:
  api-docs:
    enabled: true
  swagger-ui:
    enabled: true
open:
  api:
    title: Spring-Adam-Store
    version: v1.0.0
    description: Api Service
    serverUrl: http://localhost:${server.port}
    serverName: server dev
    api-docs: backend-service


# JWT
jwt:
  signer-key: ${JWT_SIGNER_KEY}
  refresh-key: ${JWT_REFRESH_KEY}
  reset-key: ${JWT_RESET_KEY}
  access-token:
    expiry-in-minutes: ${JWT_ACCESS_TOKEN_IN_MINUTES:15}
  refresh-token:
    expiry-in-days: ${JWT_REFRESH_TOKEN_IN_DAYS:20}
  reset:
    expiry-in-minutes: ${JWT_RESET_TOKEN_IN_MINUTES:15}

# Cloudinary
cloud:
  name: ${CLOUDINARY_NAME}
  api-key: ${CLOUDINARY_API_KEY}
  api-secret: ${CLOUDINARY_API_SECRET}
  folder-image: adam-store/images
  max-size-image: 10MB


# GHN
ghn:
  token: ${GHN_TOKEN}
  province-url: ${GHN_PROVINCE_URL}
  district-url: ${GHN_DISTRICT_URL}
  ward-url: ${GHN_WARD_URL}
  fee-url: ${GHN_FEE_URL}
  shop-id: ${SHOP_ID}

shipping:
  from_district_id: ${FROM_DISTRICT_ID}
  service_type_id: ${SERVICE_TYPE_ID}
  weight: 20
  length: 20
  width: 20
  height: 1000


